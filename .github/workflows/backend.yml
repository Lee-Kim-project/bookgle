name: backend CI/CD

on:
  push:
    branches: [main] # main 브랜치에 push 이벤트 발생 시 실행

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set Spring Config Location
        run: echo "SPRING_CONFIG_ADDITIONAL_LOCATION=file:${{ github.workspace }}/config/" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          submodules: true # 서브모듈 checkout
          ssh-key: ${{ secrets.BACKEND_CONFIG_PRIVATE_KEY }}

      - name: Update config submodule
        run: |
          git submodule update --init

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
            java-version: "17"
            distribution: "corretto"
            
      - name: Build with Gradle
        run: |
          cd backend
          chmod +x gradlew
          ./gradlew build
        shell: bash

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_EMAIL }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta-spring-server
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bookgle
          tags: spring-server
          # tags: spring-server-${{github.sha}}

      - name: Extract metadata for Docker
        id: meta-nginx
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bookgle
          tags: nginx
          # tags: nginx-${{github.sha}}

    # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile  # Dockerfile이 위치한 경로 (필요에 따라 수정)
          push: true
          tags: ${{ steps.meta-spring-server.outputs.tags }}
          images: ${{ steps.meta-spring-server.outputs.images }}

      - name: Build and Push Docker Images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./nginx/Dockerfile  # Dockerfile이 위치한 경로 (필요에 따라 수정)
          push: true
          tags: ${{ steps.meta-nginx.outputs.tags }}
          images: ${{ steps.meta-nginx.outputs.images }}
        
      # 최신 이미지를 push한 후, server에서 pull & restart
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_PRIVATE }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            cd bookgle
            export COMMIT_HASH=$(git log -1 --format=%H)
            source ~/.zshrc

            docker compose up -d --pull always
